
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000262  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000946  00000000  00000000  00000350  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000692  00000000  00000000  00000c96  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003c5  00000000  00000000  00001328  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  000016f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c0  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002b7  00000000  00000000  00001b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001db7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  78:	0c 94 2f 01 	jmp	0x25e	; 0x25e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <BUTTON_PRESSED.1892>:
	PORTD = PORTD | (1<<BUTTON);

	int LED_on = 0;
	int Button_Relased = 1;
	void BUTTON_PRESSED ( )
	{
  80:	2f 92       	push	r2
  82:	3f 92       	push	r3
		if (Button_Relased == 1)
  84:	f1 01       	movw	r30, r2
  86:	82 81       	ldd	r24, Z+2	; 0x02
  88:	93 81       	ldd	r25, Z+3	; 0x03
  8a:	01 97       	sbiw	r24, 0x01	; 1
  8c:	89 f4       	brne	.+34     	; 0xb0 <BUTTON_PRESSED.1892+0x30>
		{
			if (((PIND >> BUTTON) & 1) == 0)
  8e:	4d 99       	sbic	0x09, 5	; 9
  90:	16 c0       	rjmp	.+44     	; 0xbe <BUTTON_PRESSED.1892+0x3e>
			{
				LED_on = abs(LED_on - 1);
  92:	80 81       	ld	r24, Z
  94:	91 81       	ldd	r25, Z+1	; 0x01
  96:	01 97       	sbiw	r24, 0x01	; 1
  98:	9c 01       	movw	r18, r24
  9a:	22 f4       	brpl	.+8      	; 0xa4 <BUTTON_PRESSED.1892+0x24>
  9c:	22 27       	eor	r18, r18
  9e:	33 27       	eor	r19, r19
  a0:	28 1b       	sub	r18, r24
  a2:	39 0b       	sbc	r19, r25
  a4:	f1 01       	movw	r30, r2
  a6:	31 83       	std	Z+1, r19	; 0x01
  a8:	20 83       	st	Z, r18
				Button_Relased = 0;
  aa:	13 82       	std	Z+3, r1	; 0x03
  ac:	12 82       	std	Z+2, r1	; 0x02
  ae:	07 c0       	rjmp	.+14     	; 0xbe <BUTTON_PRESSED.1892+0x3e>
			}
		}
		else
		{
			if (((PIND >> BUTTON) & 1) != 0)
  b0:	4d 9b       	sbis	0x09, 5	; 9
  b2:	05 c0       	rjmp	.+10     	; 0xbe <BUTTON_PRESSED.1892+0x3e>
			{
				Button_Relased = 1;
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	f1 01       	movw	r30, r2
  ba:	93 83       	std	Z+3, r25	; 0x03
  bc:	82 83       	std	Z+2, r24	; 0x02
			}
		}
	}
  be:	3f 90       	pop	r3
  c0:	2f 90       	pop	r2
  c2:	08 95       	ret

000000c4 <main>:
#include <util/delay.h>
#include <avr/io.h>
#include <stdlib.h>

int main(void)
{
  c4:	cf 93       	push	r28
  c6:	df 93       	push	r29
  c8:	00 d0       	rcall	.+0      	; 0xca <main+0x6>
  ca:	00 d0       	rcall	.+0      	; 0xcc <main+0x8>
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
    DDRB = DDRB | (1<<LED_1);
  d0:	84 b1       	in	r24, 0x04	; 4
  d2:	80 62       	ori	r24, 0x20	; 32
  d4:	84 b9       	out	0x04, r24	; 4
	DDRB = DDRB | (1<<LED_2);
  d6:	84 b1       	in	r24, 0x04	; 4
  d8:	80 61       	ori	r24, 0x10	; 16
  da:	84 b9       	out	0x04, r24	; 4
	DDRB = DDRB | (1<<LED_3);
  dc:	84 b1       	in	r24, 0x04	; 4
  de:	88 60       	ori	r24, 0x08	; 8
  e0:	84 b9       	out	0x04, r24	; 4
	DDRB = DDRB | (1<<LED_4);
  e2:	84 b1       	in	r24, 0x04	; 4
  e4:	84 60       	ori	r24, 0x04	; 4
  e6:	84 b9       	out	0x04, r24	; 4
	DDRB = DDRB | (1<<LED_5);
  e8:	84 b1       	in	r24, 0x04	; 4
  ea:	82 60       	ori	r24, 0x02	; 2
  ec:	84 b9       	out	0x04, r24	; 4
	DDRD = DDRD & ~(1<<BUTTON);
  ee:	8a b1       	in	r24, 0x0a	; 10
  f0:	8f 7d       	andi	r24, 0xDF	; 223
  f2:	8a b9       	out	0x0a, r24	; 10
	
	
    PORTB = PORTB & ~(1<<LED_1);
  f4:	85 b1       	in	r24, 0x05	; 5
  f6:	8f 7d       	andi	r24, 0xDF	; 223
  f8:	85 b9       	out	0x05, r24	; 5
	PORTB = PORTB & ~(1<<LED_2);
  fa:	85 b1       	in	r24, 0x05	; 5
  fc:	8f 7e       	andi	r24, 0xEF	; 239
  fe:	85 b9       	out	0x05, r24	; 5
	PORTB = PORTB & ~(1<<LED_3);
 100:	85 b1       	in	r24, 0x05	; 5
 102:	87 7f       	andi	r24, 0xF7	; 247
 104:	85 b9       	out	0x05, r24	; 5
	PORTB = PORTB & ~(1<<LED_4);
 106:	85 b1       	in	r24, 0x05	; 5
 108:	8b 7f       	andi	r24, 0xFB	; 251
 10a:	85 b9       	out	0x05, r24	; 5
	PORTB = PORTB & ~(1<<LED_5);
 10c:	85 b1       	in	r24, 0x05	; 5
 10e:	8d 7f       	andi	r24, 0xFD	; 253
 110:	85 b9       	out	0x05, r24	; 5
	PORTD = PORTD | (1<<BUTTON);
 112:	8b b1       	in	r24, 0x0b	; 11
 114:	80 62       	ori	r24, 0x20	; 32
 116:	8b b9       	out	0x0b, r24	; 11

	int LED_on = 0;
 118:	1a 82       	std	Y+2, r1	; 0x02
 11a:	19 82       	std	Y+1, r1	; 0x01
	int Button_Relased = 1;
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	9c 83       	std	Y+4, r25	; 0x04
 122:	8b 83       	std	Y+3, r24	; 0x03
		}
	}

    while (1)
    {
		BUTTON_PRESSED ();
 124:	ce 01       	movw	r24, r28
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	1c 01       	movw	r2, r24
 12a:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		if (LED_on == 1)
 12e:	89 81       	ldd	r24, Y+1	; 0x01
 130:	9a 81       	ldd	r25, Y+2	; 0x02
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	b9 f7       	brne	.-18     	; 0x124 <main+0x60>
		{
		BUTTON_PRESSED ();
 136:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_1);
 13a:	85 b1       	in	r24, 0x05	; 5
 13c:	10 e2       	ldi	r17, 0x20	; 32
 13e:	81 27       	eor	r24, r17
 140:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 142:	9f ef       	ldi	r25, 0xFF	; 255
 144:	24 e3       	ldi	r18, 0x34	; 52
 146:	8c e0       	ldi	r24, 0x0C	; 12
 148:	91 50       	subi	r25, 0x01	; 1
 14a:	20 40       	sbci	r18, 0x00	; 0
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0x84>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0x8e>
 152:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		BUTTON_PRESSED ();
 154:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_1);
 158:	85 b1       	in	r24, 0x05	; 5
 15a:	18 27       	eor	r17, r24
 15c:	15 b9       	out	0x05, r17	; 5
		PORTB = PORTB ^ (1<<LED_2);
 15e:	85 b1       	in	r24, 0x05	; 5
 160:	10 e1       	ldi	r17, 0x10	; 16
 162:	81 27       	eor	r24, r17
 164:	85 b9       	out	0x05, r24	; 5
 166:	9f ef       	ldi	r25, 0xFF	; 255
 168:	24 e3       	ldi	r18, 0x34	; 52
 16a:	8c e0       	ldi	r24, 0x0C	; 12
 16c:	91 50       	subi	r25, 0x01	; 1
 16e:	20 40       	sbci	r18, 0x00	; 0
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <main+0xa8>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0xb2>
 176:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		BUTTON_PRESSED ();
 178:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_2);
 17c:	85 b1       	in	r24, 0x05	; 5
 17e:	81 27       	eor	r24, r17
 180:	85 b9       	out	0x05, r24	; 5
		PORTB = PORTB ^ (1<<LED_3);
 182:	85 b1       	in	r24, 0x05	; 5
 184:	08 e0       	ldi	r16, 0x08	; 8
 186:	80 27       	eor	r24, r16
 188:	85 b9       	out	0x05, r24	; 5
 18a:	9f ef       	ldi	r25, 0xFF	; 255
 18c:	24 e3       	ldi	r18, 0x34	; 52
 18e:	8c e0       	ldi	r24, 0x0C	; 12
 190:	91 50       	subi	r25, 0x01	; 1
 192:	20 40       	sbci	r18, 0x00	; 0
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0xcc>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0xd6>
 19a:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		BUTTON_PRESSED ();
 19c:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_3);
 1a0:	85 b1       	in	r24, 0x05	; 5
 1a2:	80 27       	eor	r24, r16
 1a4:	85 b9       	out	0x05, r24	; 5
		PORTB = PORTB ^ (1<<LED_4);
 1a6:	85 b1       	in	r24, 0x05	; 5
 1a8:	68 94       	set
 1aa:	ff 24       	eor	r15, r15
 1ac:	f2 f8       	bld	r15, 2
 1ae:	8f 25       	eor	r24, r15
 1b0:	85 b9       	out	0x05, r24	; 5
 1b2:	9f ef       	ldi	r25, 0xFF	; 255
 1b4:	24 e3       	ldi	r18, 0x34	; 52
 1b6:	8c e0       	ldi	r24, 0x0C	; 12
 1b8:	91 50       	subi	r25, 0x01	; 1
 1ba:	20 40       	sbci	r18, 0x00	; 0
 1bc:	80 40       	sbci	r24, 0x00	; 0
 1be:	e1 f7       	brne	.-8      	; 0x1b8 <main+0xf4>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0xfe>
 1c2:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		BUTTON_PRESSED ();
 1c4:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_4);
 1c8:	85 b1       	in	r24, 0x05	; 5
 1ca:	8f 25       	eor	r24, r15
 1cc:	85 b9       	out	0x05, r24	; 5
		PORTB = PORTB ^ (1<<LED_5);
 1ce:	85 b1       	in	r24, 0x05	; 5
 1d0:	68 94       	set
 1d2:	ee 24       	eor	r14, r14
 1d4:	e1 f8       	bld	r14, 1
 1d6:	8e 25       	eor	r24, r14
 1d8:	85 b9       	out	0x05, r24	; 5
 1da:	9f ef       	ldi	r25, 0xFF	; 255
 1dc:	24 e3       	ldi	r18, 0x34	; 52
 1de:	8c e0       	ldi	r24, 0x0C	; 12
 1e0:	91 50       	subi	r25, 0x01	; 1
 1e2:	20 40       	sbci	r18, 0x00	; 0
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0x11c>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <main+0x126>
 1ea:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		BUTTON_PRESSED ();
 1ec:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_5);
 1f0:	85 b1       	in	r24, 0x05	; 5
 1f2:	e8 26       	eor	r14, r24
 1f4:	e5 b8       	out	0x05, r14	; 5
		PORTB = PORTB ^ (1<<LED_4);
 1f6:	85 b1       	in	r24, 0x05	; 5
 1f8:	8f 25       	eor	r24, r15
 1fa:	85 b9       	out	0x05, r24	; 5
 1fc:	9f ef       	ldi	r25, 0xFF	; 255
 1fe:	24 e3       	ldi	r18, 0x34	; 52
 200:	8c e0       	ldi	r24, 0x0C	; 12
 202:	91 50       	subi	r25, 0x01	; 1
 204:	20 40       	sbci	r18, 0x00	; 0
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <main+0x13e>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0x148>
 20c:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		BUTTON_PRESSED ();
 20e:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_4);
 212:	85 b1       	in	r24, 0x05	; 5
 214:	f8 26       	eor	r15, r24
 216:	f5 b8       	out	0x05, r15	; 5
		PORTB = PORTB ^ (1<<LED_3);
 218:	85 b1       	in	r24, 0x05	; 5
 21a:	80 27       	eor	r24, r16
 21c:	85 b9       	out	0x05, r24	; 5
 21e:	9f ef       	ldi	r25, 0xFF	; 255
 220:	24 e3       	ldi	r18, 0x34	; 52
 222:	8c e0       	ldi	r24, 0x0C	; 12
 224:	91 50       	subi	r25, 0x01	; 1
 226:	20 40       	sbci	r18, 0x00	; 0
 228:	80 40       	sbci	r24, 0x00	; 0
 22a:	e1 f7       	brne	.-8      	; 0x224 <main+0x160>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <main+0x16a>
 22e:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		BUTTON_PRESSED ();
 230:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_3);
 234:	85 b1       	in	r24, 0x05	; 5
 236:	08 27       	eor	r16, r24
 238:	05 b9       	out	0x05, r16	; 5
		PORTB = PORTB ^ (1<<LED_2);
 23a:	85 b1       	in	r24, 0x05	; 5
 23c:	81 27       	eor	r24, r17
 23e:	85 b9       	out	0x05, r24	; 5
 240:	9f ef       	ldi	r25, 0xFF	; 255
 242:	24 e3       	ldi	r18, 0x34	; 52
 244:	8c e0       	ldi	r24, 0x0C	; 12
 246:	91 50       	subi	r25, 0x01	; 1
 248:	20 40       	sbci	r18, 0x00	; 0
 24a:	80 40       	sbci	r24, 0x00	; 0
 24c:	e1 f7       	brne	.-8      	; 0x246 <main+0x182>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <main+0x18c>
 250:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		BUTTON_PRESSED ();
 252:	0e 94 40 00 	call	0x80	; 0x80 <BUTTON_PRESSED.1892>
		PORTB = PORTB ^ (1<<LED_2);
 256:	85 b1       	in	r24, 0x05	; 5
 258:	18 27       	eor	r17, r24
 25a:	15 b9       	out	0x05, r17	; 5
 25c:	63 cf       	rjmp	.-314    	; 0x124 <main+0x60>

0000025e <_exit>:
 25e:	f8 94       	cli

00000260 <__stop_program>:
 260:	ff cf       	rjmp	.-2      	; 0x260 <__stop_program>
